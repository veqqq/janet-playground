define("ace/mode/janet_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/text_highlight_rules"],(function(e,t,r){"use strict";var n=e("../lib/oop"),a=e("./text_highlight_rules").TextHighlightRules,i=function(){var e=this.createKeywordMapper({keyword:"throw try var def do fn if let loop monitor-enter monitor-exit new quote recur set!","constant.language":"true false nil","support.function":"%= * *= *args* *current-file* *debug* *defdyn-prefix* *doc-color**doc-width* *err* *err-color* *executable* *exit* *exit-value**ffi-context* *lint-error* *lint-levels* *lint-warn* *macro-form**macro-lints* *module-cache* *module-loaders* *module-loading**module-make-env* *module-paths* *out* *peg-grammar**pretty-format* *profilepath* *redef* *repl-prompt* *syspath**task-id* + ++ += - -- -= -> ->> -?> -?>> / /= < <= = > >= _abstract? accumulate accumulate2 all all-bindings all-dynamics andany? apply array array/clear array/concat array/ensure array/fillarray/insert array/join array/new array/new-filled array/peekarray/pop array/push array/remove array/slice array/trim array/weakarray? as-> as-macro as?-> asm assert assertf bad-compile bad-parseband blshift bnot boolean? bor brshift brushift buffer buffer/bitbuffer/bit-clear buffer/bit-set buffer/bit-toggle buffer/blitbuffer/clear buffer/fill buffer/format buffer/format-atbuffer/from-bytes buffer/new buffer/new-filled buffer/popnbuffer/push buffer/push-at buffer/push-byte buffer/push-float32buffer/push-float64 buffer/push-string buffer/push-uint16buffer/push-uint32 buffer/push-uint64 buffer/push-word buffer/slicebuffer/trim buffer? bundle/add bundle/add-bin bundle/add-directorybundle/add-file bundle/install bundle/installed? bundle/listbundle/manifest bundle/prune bundle/reinstall bundle/replacebundle/topolist bundle/uninstall bundle/update-all bundle/whoisbxor bytes? cancel case catseq cfunction? chr cli-main cmp commentcomp compare compare< compare<= compare= compare> compare>= compifcompile complement comptime compwhen cond coro count curenv debugdebug/arg-stack debug/break debug/fbreak debug/lineage debug/stackdebug/stacktrace debug/step debug/unbreak debug/unfbreak debuggerdebugger-env debugger-on-status dec deep-not= deep= def- defaultdefault-peg-grammar defdyn defer defglobal defmacro defmacro- defndefn- delay describe dictionary? disasm distinct div doc doc*doc-format doc-of dofile drop drop-until drop-while dyn each eachkeachp edefer eflush empty? env-lookup eprin eprinf eprint eprintferror errorf ev/acquire-lock ev/acquire-rlock ev/acquire-wlockev/all-tasks ev/call ev/cancel ev/capacity ev/chan ev/chan-closeev/chunk ev/close ev/count ev/deadline ev/do-thread ev/fullev/gather ev/give ev/give-supervisor ev/go ev/lock ev/readev/release-lock ev/release-rlock ev/release-wlock ev/rselectev/rwlock ev/select ev/sleep ev/spawn ev/spawn-thread ev/takeev/thread ev/thread-chan ev/to-file ev/with-deadline ev/with-lockev/with-rlock ev/with-wlock ev/write eval eval-string even? every?extreme false? ffi/align ffi/call ffi/calling-conventions ffi/closeffi/context ffi/defbind ffi/defbind-alias ffi/free ffi/jitfnffi/lookup ffi/malloc ffi/native ffi/pointer-bufferffi/pointer-cfunction ffi/read ffi/signature ffi/size ffi/structffi/trampoline ffi/write fiber-fn fiber/can-resume? fiber/currentfiber/getenv fiber/last-value fiber/maxstack fiber/new fiber/rootfiber/setenv fiber/setmaxstack fiber/status fiber? file/closefile/flush file/lines file/open file/read file/seek file/tellfile/temp file/write filewatch/add filewatch/listen filewatch/newfilewatch/remove filewatch/unlisten filter find find-index firstflatten flatten-into flush flycheck for forever forv freezefrequencies from-pairs function? gccollect gcinterval gcsetintervalgenerate gensym geomean get get-in getline getproto group-byhas-key? has-value? hash idempotent? identity if-let if-not if-withimport import* in inc index-of indexed? int/s64 int/to-bytesint/to-number int/u64 int? interleave interpose invert janet/buildjanet/config-bits janet/version juxt juxt* keep keep-syntaxkeep-syntax! keys keyword keyword/slice keyword? kvs label lastlength lengthable? let load-image load-image-dict loop macex macex1maclintf make-env make-image make-image-dict map mapcat marshalmatch math/-inf math/abs math/acos math/acosh math/asin math/asinhmath/atan math/atan2 math/atanh math/cbrt math/ceil math/cosmath/cosh math/e math/erf math/erfc math/exp math/exp2 math/expm1math/floor math/frexp math/gamma math/gcd math/hypot math/infmath/int-max math/int-min math/int32-max math/int32-min math/lcmmath/ldexp math/log math/log-gamma math/log10 math/log1p math/log2math/nan math/next math/pi math/pow math/random math/rngmath/rng-buffer math/rng-int math/rng-uniform math/roundmath/seedrandom math/sin math/sinh math/sqrt math/tan math/tanhmath/trunc max max-of mean memcmp merge merge-into merge-module minmin-of mod module/add-paths module/cache module/expand-pathmodule/find module/loaders module/loading module/paths module/valuenan? nat? native neg? net/accept net/accept-loop net/addressnet/address-unpack net/chunk net/close net/connect net/flushnet/listen net/localname net/peername net/read net/recv-fromnet/send-to net/server net/setsockopt net/shutdown net/write nextnil? not not= number? odd? one? or os/arch os/cd os/chmod os/clockos/compiler os/cpu-count os/cryptorand os/cwd os/date os/diros/environ os/execute os/exit os/getenv os/getpid os/isatty os/linkos/lstat os/mkdir os/mktime os/open os/perm-int os/perm-stringos/pipe os/posix-exec os/posix-fork os/proc-close os/proc-killos/proc-wait os/readlink os/realpath os/rename os/rm os/rmdiros/setenv os/setlocale os/shell os/sigaction os/sleep os/spawnos/stat os/strftime os/symlink os/time os/touch os/umask os/whichpairs parse parse-all parser/byte parser/clone parser/consumeparser/eof parser/error parser/flush parser/has-more parser/insertparser/new parser/produce parser/state parser/status parser/wherepartial partition partition-by peg/compile peg/find peg/find-allpeg/match peg/replace peg/replace-all pos? postwalk pp prewalk prinprinf print printf product prompt propagate protect put put-in quitrange reduce reduce2 repeat repl require resume return reversereverse! root-env run-context sandbox scan-number seq setdynshort-fn signal slice slurp some sort sort-by sorted sorted-by spitstderr stdin stdout string string/ascii-lower string/ascii-upperstring/bytes string/check-set string/find string/find-allstring/format string/from-bytes string/has-prefix?string/has-suffix? string/join string/repeat string/replacestring/replace-all string/reverse string/slice string/splitstring/trim string/triml string/trimr string? structstruct/getproto struct/proto-flatten struct/rawget struct/to-tablestruct/with-proto struct? sum symbol symbol/slice symbol? tabletable/clear table/clone table/getproto table/newtable/proto-flatten table/rawget table/setproto table/to-structtable/weak table/weak-keys table/weak-values table? tabseq taketake-until take-while thaw toggle trace tracev true? truthy? trytuple tuple/brackets tuple/join tuple/setmap tuple/slicetuple/sourcemap tuple/type tuple? type unless unmarshal untraceupdate update-in use values var- varfn varglobal walk warn-compilewhen when-let when-with with with-dyns with-env with-syms with-varsxprin xprinf xprint xprintf yield zero? zipcoll"},"identifier",!1," ");this.$rules={start:[{token:"comment",regex:"#.*$"},{token:"keyword",regex:"[\\(|\\)]"},{token:"keyword",regex:"[\\'\\(]"},{token:"keyword",regex:"[\\[|\\]]"},{token:"keyword",regex:"[\\&]"},{token:"keyword",regex:"[\\#\\^\\{]"},{token:"keyword",regex:"[\\%]"},{token:"keyword",regex:"[@]"},{token:"constant.numeric",regex:"0[xX][0-9a-fA-F]+\\b"},{token:"constant.numeric",regex:"[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b"},{token:"constant.language",regex:"[!|\\$|%|&|\\*|\\-\\-|\\-|\\+\\+|\\+||=|!=|<=|>=|<>|<|>|!|&&]"},{token:e,regex:"[a-zA-Z_$][a-zA-Z0-9_$\\-]*\\b"},{token:"string",regex:'"',next:"string"},{token:"string.start",regex:/(`{1,})/,onMatch:function(e,t,r){const n=e.length;return r||(r=[]),r.unshift("bt-"+n),this.next="bt-"+n,this.token}},{token:"constant",regex:/:[^()\[\]{}'"\^%`,;\s]+/},{token:"string.regexp",regex:'/#"(?:\\.|(?:\\")|[^""\n])*"/g'}],string:[{token:"constant.language.escape",regex:"\\\\.|\\\\$"},{token:"string",regex:'[^"\\\\]+'},{token:"string",regex:'"',next:"start"}]};for(let e=1;e<=10;e++){const t="bt-"+e;this.$rules[t]=[{token:"string.end",regex:"`".repeat(e),onMatch:function(e,t,r){return r.shift(),this.next="start","string.end"}},{token:"constant.language.escape",regex:/\\./},{token:"string",regex:"[^\\\\`]+"},{token:"string",regex:"[`]+"}]}};n.inherits(i,a),t.JanetHighlightRules=i})),define("ace/mode/matching_parens_outdent",["require","exports","module","ace/range"],(function(e,t,r){"use strict";var n=e("../range").Range,a=function(){};(function(){this.checkOutdent=function(e,t){return!!/^\s+$/.test(e)&&/^\s*\)/.test(t)},this.autoOutdent=function(e,t){var r=e.getLine(t).match(/^(\s*\))/);if(!r)return 0;var a=r[1].length,i=e.findMatchingBracket({row:t,column:a});if(!i||i.row==t)return 0;var o=this.$getIndent(e.getLine(i.row));e.replace(new n(t,0,t,a-1),o)},this.$getIndent=function(e){var t=e.match(/^(\s+)/);return t?t[1]:""}}).call(a.prototype),t.MatchingParensOutdent=a})),define("ace/mode/janet",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/janet_highlight_rules","ace/mode/matching_parens_outdent"],(function(e,t,r){"use strict";var n=e("../lib/oop"),a=e("./text").Mode,i=e("./janet_highlight_rules").JanetHighlightRules,o=e("./matching_parens_outdent").MatchingParensOutdent,s=function(){this.HighlightRules=i,this.$outdent=new o,this.$behaviour=this.$defaultBehaviour};n.inherits(s,a),function(){this.lineCommentStart=";",this.minorIndentFunctions=["defn","defn-","defmacro","def","deftest","testing"],this.$toIndent=function(e){return e.split("").map((function(e){return/\s/.exec(e)?e:" "})).join("")},this.$calculateIndent=function(e,t){for(var r,n,a=this.$getIndent(e),i=0,o=e.length-1;o>=0&&("("===(n=e[o])?(i--,r=!0):"("===n||"["===n||"{"===n?(i--,r=!1):(")"===n||"]"===n||"}"===n)&&i++,!(i<0));o--);if(!(i<0&&r))return i<0&&!r?this.$toIndent(e.substring(0,o+1)):i>0?a=a.substring(0,a.length-t.length):a;for(var s=o+=1,l="";;){if(" "===(n=e[o])||"\t"===n)return-1!==this.minorIndentFunctions.indexOf(l)?this.$toIndent(e.substring(0,s-1)+t):this.$toIndent(e.substring(0,o+1));if(void 0===n)return this.$toIndent(e.substring(0,s-1)+t);l+=e[o],o++}},this.getNextLineIndent=function(e,t,r){return this.$calculateIndent(t,r)},this.checkOutdent=function(e,t,r){return this.$outdent.checkOutdent(t,r)},this.autoOutdent=function(e,t,r){this.$outdent.autoOutdent(t,r)},this.$id="ace/mode/janet",this.snippetFileId="ace/snippets/janet"}.call(s.prototype),t.Mode=s})),window.require(["ace/mode/janet"],(function(e){"object"==typeof module&&"object"==typeof exports&&module&&(module.exports=e)}));
